// React ‡¶•‡ßá‡¶ï‡ßá Suspense (data fetching handle ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø) ‡¶è‡¶¨‡¶Ç useState (state manage ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø) import
import { Suspense, useState } from "react";
import "./App.css";

// Toast notification ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø react-toastify ‡¶•‡ßá‡¶ï‡ßá import
import { ToastContainer } from 'react-toastify';

// Custom components import
import AvailablePlayer from "./components/availablePlayers/availablePlayer";
import Navbar from "./components/navbar/navbar";
import SelectedPlayer from "./components/selectedPlayer/selectedPlayer";

// players.json ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶ü‡¶æ fetch ‡¶ï‡¶∞‡¶æ‡¶∞ function
const fetchPlayers = async () => {
  const res = await fetch("/players.json"); // public ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ players.json ‡¶•‡ßá‡¶ï‡ßá data ‡¶Ü‡¶®‡¶õ‡ßá
  return res.json(); // data ‡¶ï‡ßá JSON format ‡¶è convert ‡¶ï‡¶∞‡¶õ‡ßá
};

// fetchPlayers() ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶æ promise ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá data ‡¶∞‡¶æ‡¶ñ‡¶≤‡¶æ‡¶Æ
const playerPromise = fetchPlayers();

function App() {
  // toggle state ‚Üí Available/Selected Players ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá switch ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
  const [toggle, setToggle] = useState(true);



  // ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá available balance ‚Üí 360034000 coins
  const [availableBalance, setAvailableBalance] = useState(360034000);

  // ‡¶Ø‡ßá‡¶∏‡¶¨ player select ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶∏‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶ñ‡¶æ‡¶®‡ßá array ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡¶¨‡ßá
  const [purchasedPlayer, setPurchasedPlayers] = useState([]);

  // ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶ø‡¶§ Player remove ‡¶ï‡¶∞‡¶æ‡¶∞ function
  const removePlayer = (p) => {
    // filter ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡ßá‡¶á player ‡¶¨‡¶æ‡¶¶ ‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ ‡¶Ø‡¶æ‡¶ï‡ßá remove ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá
    const filteredData = purchasedPlayer.filter(ply => ply.player_name !== p.player_name);
    setPurchasedPlayers(filteredData);

    // remove ‡¶ï‡¶∞‡¶≤‡ßá ‡¶§‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡¶´‡ßá‡¶∞‡¶§ balance ‡¶è ‡¶Ø‡ßã‡¶ó ‡¶π‡¶¨‡ßá
    setAvailableBalance(availableBalance + parseInt(p.price));
  };

  const addMorePlayer = () => { 
    setToggle(true)
  }

  return (
    <>
      {/* Navbar ‡¶è available balance ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá */}
      <Navbar availableBalance={availableBalance}></Navbar>

      {/* Section title ‡¶è‡¶¨‡¶Ç Toggle buttons */}
      <div className="max-sm:w-[320px] max-sm:space-x-12 mx-auto mt-6 flex justify-between items-center">
        {/* Title: Available Players ‡¶¨‡¶æ Selected Players */}
        <h1 className="text-[28px] max-sm:text-xl font-bold">
          {
            toggle === true 
              ? "Available Players" 
              : `Selected Player (${purchasedPlayer.length}/6)`
          }
        </h1>

        {/* Toggle Buttons */}
        <div className="max-sm:flex max-sm:w-[500px]">
          {/* Available Button */}
          <button
            onClick={() => setToggle(true)}
            className={`max-sm:p-2 rounded-l-2xl pl-6.5 p-3 border-1 border-gray-200 border-r-0 ${
              toggle === true ? "bg-[#E7FE29]" : ""
            } font-bold cursor-pointer`}
          >
            Available
          </button>

          {/* Selected Button */}
          <button
            onClick={() => setToggle(false)}
            className={`max-sm:p-2 rounded-r-2xl pr-6.5 p-3 border-1 border-gray-200 border-l-0 ${
              toggle === false ? "bg-[#E7FE29]" : ""
            } font-light cursor-pointer`}
          >
            Selected <span>({purchasedPlayer.length})</span>
          </button>
        </div>
      </div>

      {/* Toggle ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶ï‡ßã‡¶® Component render ‡¶π‡¶¨‡ßá */}
      {toggle === true ? (
        // Suspense ‚Üí Data ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá loading ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá
        <Suspense
          fallback={<span className="loading loading-spinner loading-xl"></span>}
        >
          <AvailablePlayer
            purchasedPlayer={purchasedPlayer}
            setPurchasedPlayers={setPurchasedPlayers}
            availableBalance={availableBalance}
            setAvailableBalance={setAvailableBalance}
            playerPromise={playerPromise}
          ></AvailablePlayer>
        </Suspense>
      ) : (
        <SelectedPlayer 
          removePlayer={removePlayer} 
          purchasedPlayer={purchasedPlayer}
          addMorePlayer={addMorePlayer}>
        </SelectedPlayer>
      )}

      {/* Toast notification container */}
      <ToastContainer></ToastContainer> 
    </>
  );
}

export default App;

/*
üü¢ Flow (Beginner-friendly)

1) Navbar ‚Üí balance ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§

2) Toggle Button ‚Üí Available / Selected players switch ‡¶ï‡¶∞‡ßá‡•§

3) AvailablePlayer ‚Üí ‡¶∏‡¶¨ players card ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§

4) PlayerCard ‚Üí Select ‡¶ï‡¶∞‡¶≤‡ßá:
  ** balance ‡¶•‡ßá‡¶ï‡ßá ‡¶¶‡¶æ‡¶Æ ‡¶ï‡¶Æ‡¶¨‡ßá
  ** purchased list ‡¶è player ‡¶Ø‡¶æ‡¶¨‡ßá
  ** toast ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá

5) SelectedPlayer ‚Üí ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ select ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§

6) SelectedCard ‚Üí Remove ‡¶ï‡¶∞‡¶≤‡ßá player ‡¶¨‡¶æ‡¶¶ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç balance ‡¶´‡ßá‡¶∞‡¶§ ‡¶Ü‡¶∏‡¶¨‡ßá‡•§

*/